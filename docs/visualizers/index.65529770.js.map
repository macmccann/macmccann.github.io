{"mappings":"ACAA,CACI,IAAM,EAAa,CAAC,EAAM,KAKtB,OAAO,cAAc,CAAC,KAAM,EAAM,CAC9B,aALe,AAAsB,YAAtB,OAAO,EAMtB,WAJa,AAAsB,YAAtB,OAAO,EAKpB,SANW,AAAsB,YAAtB,OAAO,EAOlB,MAAO,CACX,EACJ,EAEA,EAAW,cAAe,KAAK,EAAE,CAAG,KACpC,EAAW,cAAe,IAAM,KAAK,EAAE,EAEvC,IAAM,EAAO,IAAI,aAAa,GAE9B,EAAW,QAAS,SAAe,CAAC,CAAE,CAAK,CAAE,CAAM,CAAE,CAAM,CAAE,CAAO,SAChE,AAAyB,GAArB,UAAU,MAAM,EAKhB,OAAO,KAAK,CAAC,IACb,OAAO,KAAK,CAAC,IACb,OAAO,KAAK,CAAC,IACb,OAAO,KAAK,CAAC,IACb,OAAO,KAAK,CAAC,GARN,IAaP,IAAM,KAAY,IAAM,CAAC,IAClB,EAGJ,AAAE,CAAA,EAAI,CAAA,EAAU,CAAA,EAAU,CAAA,EAAY,CAAA,EAAS,CAAA,EAAS,CACnE,GAEA,EAAW,SAAU,SAAgB,CAAC,CAAE,CAAK,CAAE,CAAM,CAAE,CAAM,CAAE,CAAO,EAElE,OADA,CAAI,CAAC,EAAE,CAAG,KAAK,KAAK,CAAC,EAAG,EAAO,EAAQ,EAAQ,GACxC,CAAI,CAAC,EAAE,AAClB,GAEA,EAAW,QAAS,SAAe,CAAC,CAAE,CAAK,CAAE,CAAK,EAC9C,OAAO,KAAK,GAAG,CAAC,EAAO,KAAK,GAAG,CAAC,EAAO,GAC3C,GAEA,EAAW,UAAW,SAAiB,CAAO,EAC1C,OAAO,EAAU,KAAK,WAAW,AACrC,GAEA,EAAW,UAAW,SAAiB,CAAO,EAC1C,OAAO,EAAU,KAAK,WAAW,AACrC,EACJ","sources":["<anon>","lib/math-extensions.js"],"sourcesContent":["{\n    const defineMath = (name, assignment)=>{\n        var configurable = typeof assignment === \"function\" ? true : false;\n        var writable = typeof assignment === \"function\" ? true : false;\n        var enumerable = typeof assignment === \"function\" ? true : false;\n        Object.defineProperty(Math, name, {\n            configurable: configurable,\n            enumerable: enumerable,\n            writable: writable,\n            value: assignment\n        });\n    };\n    defineMath(\"DEG_PER_RAD\", Math.PI / 180);\n    defineMath(\"RAD_PER_DEG\", 180 / Math.PI);\n    const f32A = new Float32Array(1);\n    defineMath(\"scale\", function scale(x, inLow, inHigh, outLow, outHigh) {\n        if (arguments.length === 0) return NaN;\n        if (Number.isNaN(x) || Number.isNaN(inLow) || Number.isNaN(inHigh) || Number.isNaN(outLow) || Number.isNaN(outHigh)) return NaN;\n        if (x === Infinity || x === -Infinity) return x;\n        return (x - inLow) * (outHigh - outLow) / (inHigh - inLow) + outLow;\n    });\n    defineMath(\"fscale\", function fscale(x, inLow, inHigh, outLow, outHigh) {\n        f32A[0] = Math.scale(x, inLow, inHigh, outLow, outHigh);\n        return f32A[0];\n    });\n    defineMath(\"clamp\", function clamp(x, lower, upper) {\n        return Math.min(upper, Math.max(lower, x));\n    });\n    defineMath(\"radians\", function radians(degrees) {\n        return degrees * Math.DEG_PER_RAD;\n    });\n    defineMath(\"degrees\", function degrees(radians) {\n        return radians * Math.RAD_PER_DEG;\n    });\n}\n//# sourceMappingURL=index.65529770.js.map\n","{\n    const defineMath = (name, assignment) => {\n        var configurable = typeof assignment === 'function' ? true : false;\n        var writable = typeof assignment === 'function' ? true : false;\n        var enumerable = typeof assignment === 'function' ? true : false;\n\n        Object.defineProperty(Math, name, {\n            configurable: configurable,\n            enumerable: enumerable,\n            writable: writable,\n            value: assignment,\n        });\n    };\n\n    defineMath('DEG_PER_RAD', Math.PI / 180);\n    defineMath('RAD_PER_DEG', 180 / Math.PI);\n\n    const f32A = new Float32Array(1);\n\n    defineMath('scale', function scale(x, inLow, inHigh, outLow, outHigh) {\n        if (arguments.length === 0) {\n            return NaN;\n        }\n\n        if (\n            Number.isNaN(x) ||\n            Number.isNaN(inLow) ||\n            Number.isNaN(inHigh) ||\n            Number.isNaN(outLow) ||\n            Number.isNaN(outHigh)\n        ) {\n            return NaN;\n        }\n\n        if (x === Infinity || x === -Infinity) {\n            return x;\n        }\n\n        return ((x - inLow) * (outHigh - outLow)) / (inHigh - inLow) + outLow;\n    });\n\n    defineMath('fscale', function fscale(x, inLow, inHigh, outLow, outHigh) {\n        f32A[0] = Math.scale(x, inLow, inHigh, outLow, outHigh);\n        return f32A[0];\n    });\n\n    defineMath('clamp', function clamp(x, lower, upper) {\n        return Math.min(upper, Math.max(lower, x));\n    });\n\n    defineMath('radians', function radians(degrees) {\n        return degrees * Math.DEG_PER_RAD;\n    });\n\n    defineMath('degrees', function degrees(radians) {\n        return radians * Math.RAD_PER_DEG;\n    });\n}\n"],"names":["defineMath","name","assignment","Object","defineProperty","Math","configurable","enumerable","writable","value","PI","f32A","Float32Array","x","inLow","inHigh","outLow","outHigh","arguments","length","Number","isNaN","NaN","Infinity","scale","lower","upper","min","max","degrees","DEG_PER_RAD","radians","RAD_PER_DEG"],"version":3,"file":"index.65529770.js.map"}